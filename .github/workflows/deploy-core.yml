name: 'Deploy Core'
on:
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  deploy-core:
    runs-on: 'ubuntu-latest'
    environment: prod
    permissions:
      id-token: write
      contents: read
    env:
      CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
      CDK_DEFAULT_REGION: ${{ vars.AWS_REGION }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
      HOSTED_ZONE_ID: ${{ vars.HOSTED_ZONE_ID }}
      CLOUDFRONT_CERTIFICATE_ARN: ${{ secrets.CLOUDFRONT_CERTIFICATE_ARN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.x
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deployment
          aws-region: ${{ vars.AWS_REGION }}

      - name: Spin up Core Stack
        run: npx cdk deploy CoreStack --require-approval never

      - name: Wait for Website to be Available
        run: |
          URL="https://${{ vars.DOMAIN_NAME }}"
          TIMEOUT=180  # Timeout in seconds (3 minutes)
          INTERVAL=5   # Interval between checks in seconds

          for ((i=0; i<$TIMEOUT; i+=$INTERVAL)); do
            if curl --silent --head --fail $URL; then
              echo "Website is up. Proceeding with the next step."
              exit 0
            fi
            echo "Waiting for the website to be up... $i seconds passed."
            sleep $INTERVAL
          done

          echo "Website did not become available within 3 minutes. Exiting with failure."
          exit 1

  upload-site:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    needs: deploy-core
    steps:
      - name: Trigger Frontend Deployment
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.CHATTER_PAT }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: 'bouzomgi',
              repo: 'chatter-fe',
              event_type: 'trigger-deployment',
              client_payload: {}
            });